#!/usr/bin/python
"""
Referencing current branch in github readme.md[1]

This pre-commit hook[2] updates the README.md file's
Travis badge with the current branch. Gist at[4].

[1] http://stackoverflow.com/questions/18673694/referencing-current-branch-in-github-readme-md
[2] http://www.git-scm.com/book/en/v2/Customizing-Git-Git-Hooks
[3] https://docs.travis-ci.com/user/status-images/
[4] https://gist.github.com/dandye/dfe0870a6a1151c89ed9
"""
import subprocess
import re
import sys
# Hard-Coded for your repo (ToDo: get from remote?)
REPO="master"
result = subprocess.Popen(['git','config','--local', 'remote.origin.url']);
if result.returncode != 0:
  print('You are not connected to a remote repository.  Can\'t get the repository name')
  sys.exit()
REPOurl=subprocess.result.stdout.decode()
LAST_PATH_SEPARATOR=REPOurl.rfind('/')
GIT_SUFFIX=REPOurl.rfind('.git')
REPO = REPOurl[(LAST_PATH_SEPARATOR + 1): GIT_SUFFIX]

print ("Starting pre-commit hook...")

BRANCH=subprocess.check_output(["git",
                                "rev-parse",
                                "--abbrev-ref",
                                "HEAD"]).strip()

# String with hard-coded values
# See Embedding Status Images[3] for alternate formats (private repos, svg, etc)

#  [![Build Status](https://jenkins-sct-jenkins.apps.ecicd.dso.ncps.us-cert.gov/job/{REPO}/job/{BRANCH}/badge/icon)]
#  (https://jenkins-sct-jenkins.apps.ecicd.dso.ncps.us-cert.gov/job/{REPO}/job/{BRANCH}/)
# Output String with Variable substitution
BRANCH=BRANCH.decode("utf-8") 
print ("Branch: {BRANCH}".format(BRANCH=BRANCH))
jenkins="""
[![Build Status](https://jenkins-sct-jenkins.apps.ecicd.dso.ncps.us-cert.gov/job/{REPO}/job/{BRANCH}/badge/icon)](https://jenkins-sct-jenkins.apps.ecicd.dso.ncps.us-cert.gov/job/{REPO}/job/{BRANCH}/)
\n
""".format(BRANCH=BRANCH, REPO=REPO)

sentinel_str="[![Build Status]"

readmelines=open("README.md").readlines()
with open("README.md", "w") as fh:
    for aline in readmelines:
        if sentinel_str in aline and jenkins != aline:
            print ("Replacing:\n\t{aline}\nwith:\n\t{jenkins}".format(
                   aline=aline,
                   jenkins=jenkins))
            fh.write(jenkins)
        else:
            fh.write(aline)

subprocess.check_output(["git", "add", "README.md" ])

print ("pre-commit hook complete.")
